const portfolio = {
  data: [
    {
      id: 10,
      name: 'e-Commerce Microservices Application',
      tech: ['C#', 'ASP.NET Web API', 'Docker', 'RabbitMQ', 'Ocelot API Gateway', 'EF Core', 'MongoDB', 'Redis', 'SqlServer', 'CQRS', 'Clean Archetecture Implementation'],
      imgUrl: 'https://res.cloudinary.com/dcgwltbei/image/upload/v1598466765/DemoII_First_Frame.png',
      githublink: 'https://github.com/chuzksy-codeactive/e-Commerce-MicroservicesApp',
      type: 'Microservices',
      subInfo: 'Project is a microservices application built with Domain Drive Design and Clean Architecture in mind',
      videoUrl: 'https://res.cloudinary.com/dcgwltbei/video/upload/v1598466839/DemoII.mp4',
      projectDetails: 'Building an e-commerce Microservices app with .Net Core using Asp.Net Web API, Docker, RabbitMQ, Ocelot API Gateway, MongoDB, Redis, SqlServer, Entity Framework Core, CQRS and Clean Architecture implementation.',
      resources: {
        github: 'https://github.com/chuzksy-codeactive/e-Commerce-MicroservicesApp'
      },
    },
    {
      id: 1,
      name: 'Event Management System',
      tech: ['C#', 'ASP.NET Core', 'AutoMapper', 'Swagger', 'SQL Server', 'EF Core'],
      imgUrl: 'https://res.cloudinary.com/dcgwltbei/image/upload/v1578393276/Screenshot_2020-01-07_at_11.17.08.png',
      githublink: 'https://github.com/chuzksy-codeactive/EventManager',
      type: 'Web API',
      subInfo: 'Project is a server-side web application, it is built with C#, ASP.NET Core, AutoMapper and MSSQL',
      videoUrl: 'https://res.cloudinary.com/dcgwltbei/video/upload/v1578571524/eventmanager-mp4.mp4',
      projectDetails: 'This is a side project I picked up after learning EF Core and ASP.NET Core. The motivation was to learn the best practices on REST architecture. The project is packed with cool features such as CRUD ops, validations, paging, filtering, searching, sorting, data shaping, content negotiation, support for HATEOAS, caching, authentication and authorization, api documentions',
      resources: {
        github: 'https://github.com/chuzksy-codeactive/EventManager',
        'api Doc (Postman)': 'https://documenter.getpostman.com/view/2430813/SztK1QQ7',
        'api Url (Swagger)': 'https://eventmgt-docker.herokuapp.com/index.html',
      },
    },
    {
      id: 2,
      name: 'Book List (Razor Project)',
      tech: ['ASP.NET', 'EF Core', '.Net Core', 'MVC'],
      imgUrl: 'https://res.cloudinary.com/dcgwltbei/image/upload/v1583751335/razor-page.png',
      githublink: 'https://github.com/chuzksy-codeactive/BookListRazor',
      type: 'Frontend',
      subInfo: 'A simple ASP.NET Core application built with Razor pages',
      videoUrl: 'https://res.cloudinary.com/dcgwltbei/video/upload/v1583751365/razor-pages.mp4',
      projectDetails: 'The application performs basic CRUD operations using Entity Framework Core',
      resources: {
        github: 'https://github.com/chuzksy-codeactive/BookListRazor',
        'Web Url': 'https://booklist-docker.herokuapp.com/',
      },
    },
    {
      id: 3,
      name: 'Survely',
      tech: ['Javascript', 'React', 'Redux', 'ReduxForm', 'NodeJS', 'ExpressJS', 'MongoDB', 'Stripe', 'Sendgrid', 'PassportJS'],
      imgUrl: 'https://res.cloudinary.com/dcgwltbei/image/upload/v1586488616/8_Best_Screen_Recorders_for_Windows_10_-_Free_Paid_-_Google_Chrome_4_10_2020_4_16_01_AM.png',
      githublink: 'https://github.com/chuzksy-codeactive/Survely',
      type: 'FullStack',
      subInfo: 'Full Stack project with emailing and payment/billing features',
      videoUrl: 'https://res.cloudinary.com/dcgwltbei/video/upload/v1586488959/React_App_-_Google_Chrome_2020-04-10_04-09-51.mp4',
      projectDetails: 'This is a full stack application, built to understand some common web technologies and design patterns to connect them together. Learnt how to deploy techniques between the production and development environments, make the app to use Google and Facebook OAuth authentication, how to effectively create and send emails from the backend server, accept and process credit card payments from users.',
      resources: {
        github: 'https://github.com/chuzksy-codeactive/Survely',
        'Web Url': 'https://vast-reaches-83331.herokuapp.com/',
      },
    },
    {
      id: 4,
      name: 'Portfolio',
      tech: ['NodeJS', 'React', 'Sass'],
      imgUrl: 'https://res.cloudinary.com/dcgwltbei/image/upload/v1578557679/Screenshot_2020-01-09_at_09.14.19.png',
      githublink: 'https://github.com/chuzksy-codeactive/Portfolio',
      type: 'Frontend',
      subInfo: 'A simple frontend web application built with React and Sass',
      videoUrl: 'https://res.cloudinary.com/dcgwltbei/video/upload/v1578656171/portfolio-mp4.mp4',
      projectDetails: 'A project to display my web software development portfolio projects',
      resources: {
        github: 'https://github.com/chuzksy-codeactive/Portfolio',
      },
    },
    
    {
      id: 5,
      name: 'Phone Number Generator',
      tech: ['Javascript', 'React', 'Redux', 'NodeJS', 'ExpressJS', 'CSV', 'Jest'],
      imgUrl: 'https://res.cloudinary.com/dcgwltbei/image/upload/v1578393277/Screenshot_2020-01-07_at_10.49.46.png',
      githublink: 'https://github.com/chuzksy-codeactive/phone-number-generator',
      type: 'FullStack',
      subInfo: 'Project is a random phone number generator using React, Redux and data stored into a CSV file',
      videoUrl: 'https://res.cloudinary.com/dcgwltbei/video/upload/v1578571524/phone-mp4.mp4',
      projectDetails: 'The project is a simple web application that generates random phone numbers of 11 digits, it saves the generated numbers into a CSV file. It can also get the generated phone numbers sorted in ascending and descending order. ',
      resources: {
        github: 'https://github.com/chuzksy-codeactive/phone-number-generator',
        'Web Url': 'https://phone-numbers-provider.herokuapp.com/',
      },
    },
    {
      id: 6,
      name: 'EventCity',
      tech: ['React', 'Redux', 'NodeJS', 'ExpressJS', 'PostgresSQL', 'Sequelize', 'Selenium', 'Jest'],
      imgUrl: 'https://res.cloudinary.com/dcgwltbei/image/upload/v1578393397/Screenshot_2020-01-07_at_11.36.18.png',
      githublink: 'https://github.com/chuzksy-codeactive/eventcity-react',
      type: 'FullStack (PREN)',
      subInfo: 'EventCity is a client-server side web application built with React, Redux, Node and PostgresSQL',
      videoUrl: 'https://res.cloudinary.com/dcgwltbei/video/upload/v1578571524/eventcity-mp4.mp4',
      projectDetails: 'Project was developed as an apprentice in Andela Apprenticeship Program. Where we learnt by doing. The project is a comprehensive room scheduling software that is designed to facilitate the manangement of meetings and events. ',
      resources: {
        github: 'https://github.com/chuzksy-codeactive/eventcity-react',
        'Web Url': 'https://eventcity.herokuapp.com/',
        'Api Docs (Swagger)': 'https://eventcity.herokuapp.com/api-docs/',
      },
    },
    {
      id: 7,
      name: 'Population Management System',
      tech: ['Javascript', 'NodeJS', 'ExpressJS', 'PostgresSQL', 'Sequelize', 'Swagger'],
      imgUrl: 'https://res.cloudinary.com/dcgwltbei/image/upload/v1578393276/Screenshot_2020-01-07_at_11.00.47.png',
      githublink: 'https://github.com/chuzksy-codeactive/pms-app',
      type: 'Web API',
      subInfo: 'A simple backend project that is built with Node and Express',
      videoUrl: 'https://res.cloudinary.com/dcgwltbei/video/upload/v1578571523/pms-mp4.mp4',
      projectDetails: 'A simple web api application that manages the population details of a specific location',
      resources: {
        github: 'https://github.com/chuzksy-codeactive/pms-app',
        'Api Docs (Postman)': 'https://documenter.getpostman.com/view/5716924/S1ETPvcX',
        'Web Url': 'https://my-pms-app.herokuapp.com/',
      },
    },
    {
      id: 8,
      name: 'SMS Management System',
      tech: ['Javascript', 'NodeJS', 'ExpressJS', 'PostgresSQL', 'Sequelize', 'Swagger'],
      imgUrl: 'https://res.cloudinary.com/dcgwltbei/image/upload/v1578393278/Screenshot_2020-01-07_at_11.15.46.png',
      githublink: 'https://github.com/chuzksy-codeactive/sms-manager',
      type: 'Web API',
      subInfo: 'A simple backend project that is built with Node and Express',
      videoUrl: 'https://res.cloudinary.com/dcgwltbei/video/upload/v1578571546/sms-mp4.mp4',
      projectDetails: 'A simple web api application that manages sms between the sender and the receiver',
      resources: {
        github: 'https://github.com/chuzksy-codeactive/sms-manager',
        'Api Docs': 'https://documenter.getpostman.com/view/5716924/S1ERwHe2?version=latest',
        'Web Url': 'https://sms-api-manager.herokuapp.com/',
      },
    },
    {
      id: 9,
      name: 'eVoting System',
      tech: ['C#', 'SQL Server', 'WinForm', 'Crystal Reports', 'ADO.NET', 'SecuGen Fingerprint device'],
      imgUrl: 'https://res.cloudinary.com/dcgwltbei/image/upload/v1578495321/Screenshot_2020-01-08_at_15.52.18.png',
      githublink: 'https://github.com/chuzksy-codeactive/NCS-Electronic-Voting-System',
      type: 'Web API',
      subInfo: 'A WinForm application built with C# and MSSQL',
      videoUrl: 'https://res.cloudinary.com/dcgwltbei/video/upload/v1578571522/evoting.mp4',
      projectDetails: 'eVoting System is a biometric Voting System for a department which eliminates impersonation by using a fingerprint scanner to cast the votes. The system can also backup and restore the database, count and display the vote results, generate reports using crystal report.',
      resources: {
        github: 'https://github.com/chuzksy-codeactive/NCS-Electronic-Voting-System',
        demo: 'https://drive.google.com/file/d/0B89x_2oF4-81LTdnTEE5eEkzVU0/view?usp=sharing',
      },
    },
  ],
};

export default portfolio;
